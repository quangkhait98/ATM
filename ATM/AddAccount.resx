<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="lbage.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>